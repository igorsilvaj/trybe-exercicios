// JavaScript - Primeiros passos - Variaveis
// ðŸš€ Vamos praticar o que aprendemos no vÃ­deo? ðŸ’ª
// Abra o seu VS Code e faÃ§a os exercÃ­cios a seguir.
// *Dica: Com o plugin Code Runner que vimos no vÃ­deo vocÃª pode executar o seu cÃ³digo no VS Code com o atalho ctrl + alt + n. Aqui vocÃª encontra mais sobre o Code Runner e sobre outras extensÃµes Ãºteis para o VS Code!
// Crie uma constante chamada myName e atribua a ela o seu nome (Exemplo: Carolina).
// Crie uma constante chamada birthCity e atribua a ela a sua cidade natal.
// Crie uma variÃ¡vel chamada birthYear e atribua a ela o ano em que vocÃª nasceu.
// Utilize o console.log() para imprimir as constantes e variÃ¡veis que vocÃª criou.
// Altere o valor atribuÃ­do Ã  variÃ¡vel birthYear para 2030. FaÃ§a um console.log(birthYear) novamente para ver o que acontece!
// Altere o valor atribuÃ­do Ã  constante birthCity. FaÃ§a um console.log(birthCity) novamente! VocÃª saberia explicar por que recebemos uma mensagem de erro? ðŸ¤”
// 
// let myName = "Igor";
// const birthCity = "Campinas";
// let birthYear = 1999;
// birthYear = 2030;
// // birthCity = "HortolÃ¢ndia";
// console.log(myName, birthCity, birthYear);

//Tipos Primitivos, Tipagem DinÃ¢mica e OperaÃ§Ãµes AritmÃ©ticas
// ðŸš€ Agora que vocÃª jÃ¡ conhece os operadores aritmÃ©ticos bÃ¡sicos do JavaScript, vamos praticÃ¡-los? VocÃª pode consultar a lista de operadores na tabela JavaScript Arithmetic Operators disponÃ­vel nesse link se tiver dÃºvidas. Vamos fazer algumas operaÃ§Ãµes simples para encontrarmos a Ã¡rea e o perÃ­metro de um retÃ¢ngulo de base 5 e altura 8.
// Crie uma constante chamada base e uma variÃ¡vel chamada height e atribua os seus respectivos valores: 5 e 8.
// Crie uma constante chamada area e atribua a ela o resultado da multiplicaÃ§Ã£o da base pela altura. Dica: lembre-se de usar sempre o console.log() para imprimir as variÃ¡veis e checar os resultados das operaÃ§Ãµes!
// Crie uma constante chamada perimeter e atribua a ela a soma de todos os lados do retÃ¢ngulo.
//
// const base = 5;
// let height = 8;
// const area = base * height;
// const perimeter = 2*base + 2*height;

//CondiÃ§Ãµes If e Else
// ðŸš€ Criar estruturas condicionais com operadores if/else e operadores lÃ³gicos serÃ¡ algo muito comum na sua carreira de pessoa desenvolvedora. EntÃ£o vamos praticar o que aprendemos no vÃ­deo?
// Crie uma constante que receba a nota de uma pessoa candidata em um desafio tÃ©cnico, e atribua a ela um valor entre 1 e 100;
// Implemente uma lÃ³gica que verifique se a pessoa candidata foi aprovada, reprovada ou se ela estÃ¡ na lista de espera. Para isso, considere as seguintes informaÃ§Ãµes:
// Se a nota for maior ou igual a 80, imprima "ParabÃ©ns, vocÃª foi aprovada(o)!"
// Se a nota for menor que 80 e maior ou igual a 60, imprima "VocÃª estÃ¡ na nossa lista de espera"
// Se a nota for menor que 60, imprima "VocÃª foi reprovada(o)"
// Crie uma estrutura condicional utilizando o if, else if e else para criar o seu algoritmo, e os operadores lÃ³gicos que se aplicam a cada situaÃ§Ã£o.
// Altere o valor da nota para verificar se as condiÃ§Ãµes que vocÃª implementou funcionam;
// 
// const nota = 60;
// if(nota >= 80){
//     console.log("ParabÃ©ns, vocÃª foi aprovada(o)!");
// }else if(nota < 80 && nota >= 60){
//     console.log("VocÃª estÃ¡ na nossa lista de espera");
// }else{
//     console.log("VocÃª foi reprovada(o)");
// }

// JavaScript - Primeiros passos - Pratica Ex. 5
// ðŸš€ FaÃ§a um programa que defina trÃªs variÃ¡veis com os valores dos trÃªs Ã¢ngulos internos de um triÃ¢ngulo. Retorne true se os Ã¢ngulos representarem os Ã¢ngulos de um triÃ¢ngulo e false, caso contrÃ¡rio. Se algum Ã¢ngulo for invÃ¡lido o programa deve retornar uma mensagem de erro.
// Para os Ã¢ngulos serem de um triÃ¢ngulo vÃ¡lido, a soma dos trÃªs devem ser 180 graus.
// Um Ã¢ngulo serÃ¡ considerado invÃ¡lido se nÃ£o tiver um valor positivo.

// function verifica_triangulo(a1, a2, a3){
//     return a1+a2+a3 === 180 ? true : false;
// }
// console.log(verifica_triangulo(a1,a2,a3));
//
// Ex. 8
// ðŸš€ Escreva um programa que defina trÃªs nÃºmeros em constantes e retorne true se pelo menos uma das trÃªs for par. Caso contrÃ¡rio, ele retorna false.
// const numero1 = 10;
// const numero2 = 56;
// const numero3 = 62342;
// let temAlgumPar = numero1 || numero2 || numero3 % 2 === 0 ? true : false;
// let temAlgumImpar = numero1 || numero2 || numero3 % 2 !== 0 ? true : false;
// console.log(temAlgumPar === true ? "Tem" : "NÃ£o tem");
// console.log(temAlgumImpar === true ? "Tem" : "NÃ£o tem");

// JavaScript - Array e loop For - Ex. 5
// 5.ðŸš€ Utilizando for, descubra qual o maior valor contido no array e imprima-o;
// let maiorNum = 0;
// for(let i in numbers){
//     if(numbers[i]>maiorNum){
//         maiorNum = numbers[i];
//     }
// }
// console.log(maiorNum);